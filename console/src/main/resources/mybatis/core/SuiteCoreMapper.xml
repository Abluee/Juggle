<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.somta.juggle.console.infrastructure.mapper.suite.SuiteMapper">
<!-- Result Map-->
<resultMap id="BaseResultMap" type="net.somta.juggle.console.infrastructure.po.suite.SuitePO" >
	<result column="id" property="id"/>
	<result column="suite_code" property="suiteCode"/>
	<result column="suite_name" property="suiteName"/>
	<result column="suite_classify_id" property="suiteClassifyId"/>
	<result column="suite_image" property="suiteImage"/>
	<result column="suite_version" property="suiteVersion"/>
	<result column="suite_desc" property="suiteDesc"/>
	<result column="suite_help_doc_json" property="suiteHelpDocJson"/>
	<result column="suite_flag" property="suiteFlag"/>
	<result column="deleted" property="deleted"/>
	<result column="created_at" property="createdAt"/>
	<result column="created_by" property="createdBy"/>
	<result column="updated_at" property="updatedAt"/>
	<result column="updated_by" property="updatedBy"/>
</resultMap>

<sql id="Example_Where_Clause">
	where 1=1
	<if test="suiteName != null and suiteName != ''">
		and suite_name like concat("%",#{suiteName},"%")
	</if>
	ORDER BY created_at DESC
</sql>

<!-- t_suite table all fields -->
<sql id="Base_Column_List" >
	id, suite_code, suite_name, suite_classify_id, suite_image, suite_version, suite_desc, suite_help_doc_json, suite_flag, created_at, created_by, updated_at, updated_by
</sql>

<insert id="add" parameterType="net.somta.juggle.console.infrastructure.po.suite.SuitePO" >
	insert into t_suite (id, suite_code, suite_name, suite_classify_id, suite_image, suite_version, suite_desc, suite_help_doc_json, suite_flag,deleted, created_at, created_by, updated_at, updated_by)
	values (#{id},#{suiteCode},#{suiteName},#{suiteClassifyId},#{suiteImage},#{suiteVersion},#{suiteDesc},#{suiteHelpDocJson},#{suiteFlag},0,#{createdAt},#{createdBy},#{updatedAt},#{updatedBy});
</insert>

<delete id="deleteById" parameterType="java.lang.Long">
 delete from t_suite where id=#{id}
</delete>

<update id="update" parameterType="net.somta.juggle.console.infrastructure.po.suite.SuitePO" >
	update t_suite set
	<trim  suffixOverrides="," >
	<if test="suiteCode != null and suiteCode != ''">
		suite_code=#{suiteCode},
	</if>
	<if test="suiteName != null and suiteName != ''">
		suite_name=#{suiteName},
	</if>
	<if test="suiteClassifyId != null">
		suite_classify_id=#{suiteClassifyId},
	</if>
	<if test="suiteImage != null and suiteImage != ''">
		suite_image=#{suiteImage},
	</if>
	<if test="suiteVersion != null and suiteVersion != ''">
		suite_version=#{suiteVersion},
	</if>
	<if test="suiteDesc != null and suiteDesc != ''">
		suite_desc=#{suiteDesc},
	</if>
	<if test="suiteHelpDocJson != null and suiteHelpDocJson != ''">
		suite_help_doc_json=#{suiteHelpDocJson},
	</if>
	<if test="suiteFlag != null">
		suite_flag=#{suiteFlag},
	</if>
	<if test="createdAt != null">
		created_at=#{createdAt},
	</if>
	<if test="createdBy != null">
		created_by=#{createdBy},
	</if>
	<if test="updatedAt != null">
		updated_at=#{updatedAt},
	</if>
	<if test="updatedBy != null">
		updated_by=#{updatedBy},
	</if>
	</trim> where id=#{id}
</update>

<select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.Long">
	select <include refid="Base_Column_List" />
	from t_suite where id = #{id}
</select>

<select id="queryListCount" resultType="java.lang.Long" parameterType="net.somta.juggle.console.domain.suite.suiteinfo.vo.SuiteQueryVO">
	select count(*)
	from t_suite
	<include refid="Example_Where_Clause"/>
</select>

<select id="queryByList" resultMap="BaseResultMap" parameterType="net.somta.juggle.console.domain.suite.suiteinfo.vo.SuiteQueryVO">
	select <include refid="Base_Column_List" /> 
	from t_suite
	<include refid="Example_Where_Clause"/>
</select>

</mapper>   
